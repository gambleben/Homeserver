#To prep for Traefik (I recommend Caddy as all of this is unneccessary, Traefik labels are also overly complex):
## HTTPS reverse proxy: Traefik ~ Create Traefik files and set permissions
#sudo mkdir -p $HOME/docker/traefik
#sudo touch $HOME/docker/traefik/traefik.log
#sudo chmod 600 $HOME/docker/traefik/traefik.log
#sudo touch $HOME/docker/traefik/acme.json
#sudo chmod 600 $HOME/docker/traefik/acme.json
# Download Traefik settings
#sudo wget -P $HOME/docker/traefik https://raw.githubusercontent.com/gambleben/Mediaserver/master/traefik/traefik.toml


##____________________ Prometheus [Monitoring/Logging]
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.18.1
    restart: always
    environment:
      - TZ=$TZ
    volumes:
      - $USERHOME/docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitor-net
##____________________ Alertmanager [Monitoring/Alerts]
  prometheus-alertmanager:
    container_name: prometheus-alertmanager
    image: prom/alertmanager:v0.20.0
    restart: always
    environment:
      - TZ=$TZ
    volumes:
      - $USERHOME/docker/prometheus/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    networks:
      - monitor-net
##____________________ Nodes [Monitoring/]
  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - monitor-net
##____________________ Cadvisor [Monitoring/Docker]
  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.36.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro 
    restart: unless-stopped
    ports:
      - "9180:8080"
    networks:
      - monitor-net
##____________________ Pushgateway [Monitoring/Pushgateway]
  pushgateway:
    image: prom/pushgateway:v1.2.0
    container_name: pushgateway
    restart: unless-stopped
    ports:
      - 9191:9091
    networks:
      - monitor-net
##____________________ Grafana [Monitoring/Dashboard]
  grafana:
    container_name: grafana
    image: grafana/grafana:7.0.3
    restart: always
    environment:
      - TZ=${TZ}
      - GF_SECURITY_ADMIN_USER=${USER}
      - GF_SECURITY_ADMIN_PASSWORD=${PW_EXT}
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp_relay:25
      - GF_SMTP_FROM_ADDRESS=${EMAIL}
#      - GF_SERVER_DOMAIN=grafana.$DOMAIN
#      - GF_SERVER_ROOT_URL=https://grafana.$DOMAIN
#      - VIRTUAL_HOST=grafana.$DOMAIN
#      - VIRTUAL_PORT=3000
#      - VIRTUAL_PROTO=http
#      - LETSENCRYPT_HOST=grafana.$DOMAIN
#      - LETSENCRYPT_EMAIL=${EMAIL}
    volumes:
#      - grafana_data:/var/lib/grafana
      - $USERHOME/docker/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - monitor-net
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.grafana-redirect.redirectscheme.scheme=https
      - traefik.http.routers.grafana-redirect.entrypoints=web
      - traefik.http.routers.grafana-redirect.middlewares=grafana-redirect
      - traefik.http.routers.grafana-redirect.rule=Host(`grafana.$DOMAIN`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.rule=Host(`grafana.$DOMAIN`)
      - traefik.http.routers.grafana.tls.certresolver=letsencrypt
      - traefik.http.services.grafana.loadbalancer.server.port=3000
volumes:
  prometheus_data: {}
  grafana_data: {}
networks: 
  monitor-net:
    driver: bridge
